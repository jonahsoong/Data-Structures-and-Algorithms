class Solution {
    public double myPow(double x, int n) {
        if(n== 0)
            return 1;
        if(n == 1)
            return x;
        double pow = myPow(x, Math.abs(n/2));
        if(n < 0){
            if(n%2 == 0)
            return 1/(pow*pow);
        return 1/(pow*pow*x);  
        }
        else{
        if(n%2 == 0)
            return pow*pow;
        return pow*pow*x;
        }
        // double result = 1;
        // System.out.println(n);
        // for(int i = 0; i < Math.abs(n); i++){
        //     if(i+i-1 >0 && i+i-1< n){
        //         result *= result;
        //         i+=(i-1);
        //     }
        //     else if(i+i-1 <= 0){
        //         result *= x;
        //     }
        //     else{
        //         result *= myPow(x, n-i);
        //         i += (n-i);
        //     }
        //     System.out.println(i + " " + result);
        // }
        // if(n<0)
        //     return 1/result;
        // return result;
    }
    
    // public double closestPower(double x, int n, int targ){
    //     for(int i = n; i )
    // }
}

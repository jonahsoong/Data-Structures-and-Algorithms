/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode sum = new ListNode();
        ListNode temp = sum;
        int carry = 0;
        if(l1 == null)
            return l2;
        else if(l2 == null)
            return l1;
        int count = 1;
        while(l1!= null || l2 != null){
            if(count > 1){
            temp.next = new ListNode();
            temp = temp.next;
            }
            if(l1 != null && l2 != null){
                temp.val = (l1.val + l2.val + carry)%10;
                carry = (l1.val + l2.val + carry)/10;
                l1 = l1.next;
                l2 = l2.next;
            }
            else if(l1 == null){
                temp.val = (l2.val + carry)%10;
                carry = (l2.val + carry)/10;
                l2 = l2.next;
            }
            else{
                temp.val = (l1.val + carry)%10;
                carry = (l1.val + carry)/10;
                l1 = l1.next;
            }
            //System.out.println(temp.val + " " + count);
            count++;
        }
        if(carry >= 1){
            temp.next = new ListNode(1);
        }
        return sum;
    }
}
